# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usb_storage" "usbhid" "sd_mod" ];
  boot.kernelModules = [ "kvm-amd" "v4l2loopback" "i2c-dev" "ddcci-backlight" ];
  boot.extraModulePackages = [ config.boot.kernelPackages.ddcci-driver ];

  fileSystems."/" = {
    device = "none";
    fsType = "tmpfs";
  }; 

  fileSystems."/nix" =
    { device = "/dev/disk/by-uuid/1a9ead47-d1bb-4c02-aa32-cb9a09d80bd3";
      fsType = "ext4";
      neededForBoot = true;
    };

  fileSystems."/mnt/2" =
    { device = "/dev/disk/by-uuid/7aaaf328-fb7c-4710-9575-b40d749a47b0";
      fsType = "ext4";
      neededForBoot = false;
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/57F4-55FB";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };

  swapDevices = [{
    device = "/dev/disk/by-uuid/eb4b1399-fea0-460f-9a5f-39de3d963835";
  }];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp14s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp15s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
